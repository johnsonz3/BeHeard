{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport SelectBox from 'react-native-multi-selectbox';\nimport { xorBy } from 'lodash';\n\nvar FormScreen = function FormScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDisabilities = _useState2[0],\n      setSelectedDisabilities = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedSupports = _useState4[0],\n      setSelectedSupports = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var DISABILITIES = [{\n    item: 'Acquired brain injury',\n    id: 'Acquired brain injury'\n  }, {\n    item: 'ALS/Lou Gehrig’s',\n    id: 'ALS/Lou Gehrig’s'\n  }, {\n    item: 'Amputation',\n    id: 'Amputation'\n  }, {\n    item: 'Anxiety disorders',\n    id: 'Anxiety disorders'\n  }, {\n    item: 'Arthritis',\n    id: 'Arthritis'\n  }, {\n    item: 'Autism Spectrum Disorders',\n    id: 'Autism Spectrum Disorders'\n  }, {\n    item: 'Cerebral Palsy',\n    id: 'Cerebral Palsy'\n  }, {\n    item: 'Chronic Pain',\n    id: 'Chronic Pain'\n  }, {\n    item: 'Deafness or Hard of Hearing',\n    id: 'Deafness or Hard of Hearing'\n  }, {\n    item: 'Dementia',\n    id: 'Dementia'\n  }, {\n    item: 'Epilepsy',\n    id: 'Epilepsy'\n  }, {\n    item: 'Multiple Sclerosis',\n    id: 'Multiple Sclerosis'\n  }, {\n    item: 'Parkinson’s',\n    id: 'Parkinson’s'\n  }, {\n    item: 'Stuttering',\n    id: 'Stuttering'\n  }, {\n    item: 'Tourrette’s Syndrome',\n    id: 'Tourrette’s Syndrome'\n  }, {\n    item: 'Visual Impairments',\n    id: 'Visual Impairments'\n  }];\n  var SUPPORTS = [{\n    item: 'Speak loudly',\n    id: 'Speak loudly'\n  }, {\n    item: 'Speak slowly',\n    id: 'Speak slowly'\n  }, {\n    item: 'Speak directly to me and not my interpreter',\n    id: 'Speak directly to me and not my interpreter'\n  }, {\n    item: 'Avoid making loud noises',\n    id: 'Avoid making loud noises'\n  }, {\n    item: 'Place things in my reach',\n    id: 'Place things in my reach'\n  }, {\n    item: 'Be patient when I speak',\n    id: 'Be patient when I speak'\n  }, {\n    item: 'Read me the options out loud',\n    id: 'Read me the options out loud'\n  }, {\n    item: 'Ask before you help',\n    id: 'Ask before you help'\n  }];\n\n  function onDisabilityChange() {\n    return function (item) {\n      return setSelectedDisabilities(xorBy(selectedDisabilities, [item], 'id'));\n    };\n  }\n\n  function onSupportsChange() {\n    return function (item) {\n      return setSelectedSupports(xorBy(selectedSupports, [item], 'id'));\n    };\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: (styles.blockContainer, styles.bottomBorder)\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"What is your name?\"), React.createElement(TextInput, {\n    onChangeText: setName,\n    value: name\n  })), React.createElement(View, {\n    style: styles.blockContainer\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"What disabilities are you experiencing?\"), React.createElement(SelectBox, {\n    label: \"\",\n    options: DISABILITIES,\n    selectedValues: selectedDisabilities,\n    onMultiSelect: onDisabilityChange(),\n    onTapClose: onDisabilityChange(),\n    arrowIconColor: \"white\",\n    searchIconColor: \"white\",\n    toggleIconColor: \"#291b4a\",\n    inputFilterStyle: {\n      color: \"white\",\n      fontSize: 15\n    },\n    optionsLabelStyle: {\n      color: '#291b4a',\n      fontFamily: 'Avenir'\n    },\n    multiOptionContainerStyle: {\n      backgroundColor: '#291b4a'\n    },\n    multiOptionsLabelStyle: {\n      color: 'white'\n    },\n    multiListEmptyLabelStyle: {\n      color: '#291b4a'\n    },\n    listEmptyLabelStyle: {\n      color: '#291b4a'\n    },\n    selectedItemStyle: {\n      color: 'orange',\n      backgroundColor: 'red'\n    },\n    isMulti: true\n  })), React.createElement(View, {\n    style: styles.blockContainer\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"What do you find helpful?\"), React.createElement(SelectBox, {\n    label: \"\",\n    options: SUPPORTS,\n    selectedValues: selectedSupports,\n    onMultiSelect: onSupportsChange(),\n    onTapClose: onSupportsChange(),\n    arrowIconColor: \"white\",\n    searchIconColor: \"white\",\n    toggleIconColor: \"#291b4a\",\n    inputFilterStyle: {\n      color: \"white\",\n      fontSize: 15\n    },\n    optionsLabelStyle: {\n      color: '#291b4a',\n      fontFamily: 'Avenir'\n    },\n    multiOptionContainerStyle: {\n      backgroundColor: '#291b4a'\n    },\n    multiOptionsLabelStyle: {\n      color: 'white'\n    },\n    multiListEmptyLabelStyle: {\n      color: '#291b4a'\n    },\n    listEmptyLabelStyle: {\n      color: '#291b4a'\n    },\n    selectedItemStyle: {\n      color: 'orange',\n      backgroundColor: 'red'\n    },\n    isMulti: true\n  })), React.createElement(View, {\n    style: styles.button\n  }, React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('Profile');\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText\n  }, \"Next\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#6447a8',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: 100,\n    paddingLeft: 0\n  },\n  blockContainer: {\n    flex: 1,\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    width: '70%'\n  },\n  text: {\n    fontFamily: 'Avenir',\n    fontSize: 20,\n    color: 'white',\n    letterSpacing: 0.25\n  },\n  bottomBorder: {\n    borderBottomWidth: 1,\n    borderBottomColor: 'white'\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 100,\n    elevation: 3,\n    backgroundColor: 'white'\n  },\n  buttonText: {\n    fontFamily: 'Avenir',\n    fontSize: 18,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: '#6447a8'\n  }\n});\n\nfunction padding(a, b, c, d) {\n  return {\n    paddingTop: a,\n    paddingRight: b ? b : a,\n    paddingBottom: c ? c : a,\n    paddingLeft: d ? d : b ? b : a\n  };\n}\n\nexport default FormScreen;","map":{"version":3,"sources":["C:/Users/cat_w/OneDrive - Queen's University/Fourth Year/HackHer2021/FormScreen.js"],"names":["React","useState","SelectBox","xorBy","FormScreen","navigation","selectedDisabilities","setSelectedDisabilities","selectedSupports","setSelectedSupports","name","setName","DISABILITIES","item","id","SUPPORTS","onDisabilityChange","onSupportsChange","styles","container","blockContainer","bottomBorder","text","color","fontSize","fontFamily","backgroundColor","button","navigate","buttonText","StyleSheet","create","flex","justifyContent","alignItems","paddingTop","paddingLeft","width","letterSpacing","borderBottomWidth","borderBottomColor","paddingVertical","paddingHorizontal","borderRadius","elevation","lineHeight","fontWeight","padding","a","b","c","d","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StyleSheet, View, Text, TextInput, Picker } from 'react-native';\r\nimport SelectBox from 'react-native-multi-selectbox';\r\nimport { xorBy } from 'lodash'\r\n\r\nconst FormScreen = ({ navigation }) => {\r\n    const [selectedDisabilities, setSelectedDisabilities] = useState([]);\r\n    const [selectedSupports, setSelectedSupports] = useState([]);\r\n    const [name, setName] = useState('');\r\n\r\n    const DISABILITIES = [\r\n        {\r\n            item: 'Acquired brain injury',\r\n            id: 'Acquired brain injury',\r\n        },\r\n        {\r\n            item: 'ALS/Lou Gehrig’s',\r\n            id: 'ALS/Lou Gehrig’s',\r\n        },\r\n        {\r\n            item: 'Amputation',\r\n            id: 'Amputation',\r\n        },\r\n        {\r\n            item: 'Anxiety disorders',\r\n            id: 'Anxiety disorders',\r\n        },\r\n        {\r\n            item: 'Arthritis',\r\n            id: 'Arthritis',\r\n        },\r\n        {\r\n            item: 'Autism Spectrum Disorders',\r\n            id: 'Autism Spectrum Disorders',\r\n        },\r\n        {\r\n            item: 'Cerebral Palsy',\r\n            id: 'Cerebral Palsy',\r\n        },\r\n        {\r\n            item: 'Chronic Pain',\r\n            id: 'Chronic Pain',\r\n        },\r\n        {\r\n            item: 'Deafness or Hard of Hearing',\r\n            id: 'Deafness or Hard of Hearing',\r\n        },\r\n        {\r\n            item: 'Dementia',\r\n            id: 'Dementia',\r\n        },\r\n        {\r\n            item: 'Epilepsy',\r\n            id: 'Epilepsy',\r\n        },\r\n        {\r\n            item: 'Multiple Sclerosis',\r\n            id: 'Multiple Sclerosis',\r\n        },\r\n        {\r\n            item: 'Parkinson’s',\r\n            id: 'Parkinson’s',\r\n        },\r\n        {\r\n            item: 'Stuttering',\r\n            id: 'Stuttering',\r\n        },\r\n        {\r\n            item: 'Tourrette’s Syndrome',\r\n            id: 'Tourrette’s Syndrome',\r\n        },\r\n        {\r\n            item: 'Visual Impairments',\r\n            id: 'Visual Impairments',\r\n        }]\r\n\r\n    const SUPPORTS = [\r\n        {\r\n            item: 'Speak loudly',\r\n            id: 'Speak loudly',\r\n        },\r\n        {\r\n            item: 'Speak slowly',\r\n            id: 'Speak slowly',\r\n        },\r\n        {\r\n            item: 'Speak directly to me and not my interpreter',\r\n            id: 'Speak directly to me and not my interpreter',\r\n        },\r\n        {\r\n            item: 'Avoid making loud noises',\r\n            id: 'Avoid making loud noises',\r\n        },\r\n        {\r\n            item: 'Place things in my reach',\r\n            id: 'Place things in my reach',\r\n        },\r\n        {\r\n            item: 'Be patient when I speak',\r\n            id: 'Be patient when I speak',\r\n        },\r\n        {\r\n            item: 'Read me the options out loud',\r\n            id: 'Read me the options out loud',\r\n        },\r\n        {\r\n            item: 'Ask before you help',\r\n            id: 'Ask before you help',\r\n        }]\r\n\r\n\r\n    function onDisabilityChange() {\r\n        return (item) => setSelectedDisabilities(xorBy(selectedDisabilities, [item], 'id'))\r\n    }\r\n\r\n    function onSupportsChange() {\r\n        return (item) => setSelectedSupports(xorBy(selectedSupports, [item], 'id'))\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.blockContainer, styles.bottomBorder}>\r\n                <Text style={styles.text} >What is your name?</Text>\r\n                <TextInput\r\n                    onChangeText={setName}\r\n                    value={name}\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.blockContainer}>\r\n                <Text style={styles.text} >What disabilities are you experiencing?</Text>\r\n                <SelectBox\r\n                    label=''\r\n                    options={DISABILITIES}\r\n                    selectedValues={selectedDisabilities}\r\n                    onMultiSelect={onDisabilityChange()}\r\n                    onTapClose={onDisabilityChange()}\r\n                    arrowIconColor='white'\r\n                    searchIconColor='white'\r\n                    toggleIconColor='#291b4a'\r\n                    inputFilterStyle={{ color: \"white\", fontSize: 15 }} // search text\r\n                    optionsLabelStyle={{ color: '#291b4a', fontFamily: 'Avenir' }} // option text\r\n                    multiOptionContainerStyle={{ backgroundColor: '#291b4a' }} // bubble bg color\r\n                    multiOptionsLabelStyle={{ color: 'white' }} // bubble text color\r\n                    multiListEmptyLabelStyle={{ color: '#291b4a' }} // placeholder text color\r\n                    listEmptyLabelStyle={{ color: '#291b4a' }} // \"No results found\" text\r\n                    selectedItemStyle={{ color: 'orange', backgroundColor: 'red' }}\r\n                    isMulti\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.blockContainer}>\r\n                <Text style={styles.text} >What do you find helpful?</Text>\r\n                <SelectBox\r\n                    label=''\r\n                    options={SUPPORTS}\r\n                    selectedValues={selectedSupports}\r\n                    onMultiSelect={onSupportsChange()}\r\n                    onTapClose={onSupportsChange()}\r\n                    arrowIconColor='white'\r\n                    searchIconColor='white'\r\n                    toggleIconColor='#291b4a'\r\n                    inputFilterStyle={{ color: \"white\", fontSize: 15 }} // search text\r\n                    optionsLabelStyle={{ color: '#291b4a', fontFamily: 'Avenir' }} // option text\r\n                    multiOptionContainerStyle={{ backgroundColor: '#291b4a' }} // bubble bg color\r\n                    multiOptionsLabelStyle={{ color: 'white' }} // bubble text color\r\n                    multiListEmptyLabelStyle={{ color: '#291b4a' }} // placeholder text color\r\n                    listEmptyLabelStyle={{ color: '#291b4a' }} // \"No results found\" text\r\n                    selectedItemStyle={{ color: 'orange', backgroundColor: 'red' }}\r\n                    isMulti\r\n                />\r\n            </View>\r\n\r\n            <View style={styles.button}>\r\n                <Pressable\r\n                    style={styles.button}\r\n                    onPress={() => navigation.navigate('Profile')}\r\n                >\r\n                    <Text style={styles.buttonText}>Next</Text>\r\n                </Pressable>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#6447a8',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingTop: 100,\r\n        paddingLeft: 0,\r\n    },\r\n    blockContainer: {\r\n        flex: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'flex-start',\r\n        width: '70%',\r\n    },\r\n    text: {\r\n        fontFamily: 'Avenir',\r\n        fontSize: 20,\r\n        color: 'white',\r\n        letterSpacing: 0.25,\r\n    },\r\n    bottomBorder: {\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'white'\r\n\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 32,\r\n        borderRadius: 100,\r\n        elevation: 3,\r\n        backgroundColor: 'white',\r\n    },\r\n    buttonText: {\r\n        fontFamily: 'Avenir',\r\n        fontSize: 18,\r\n        lineHeight: 21,\r\n        fontWeight: 'bold',\r\n        letterSpacing: 0.25,\r\n        color: '#6447a8',\r\n    },\r\n});\r\n\r\nfunction padding(a, b, c, d) {\r\n    return {\r\n        paddingTop: a,\r\n        paddingRight: b ? b : a,\r\n        paddingBottom: c ? c : a,\r\n        paddingLeft: d ? d : (b ? b : a)\r\n    }\r\n}\r\n\r\nexport default FormScreen;\r\n"]},"metadata":{},"sourceType":"module"}