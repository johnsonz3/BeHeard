{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"labelStyle\", \"containerStyle\", \"inputFilterContainerStyle\", \"inputFilterStyle\", \"optionsLabelStyle\", \"optionContainerStyle\", \"multiOptionContainerStyle\", \"multiOptionsLabelStyle\", \"multiListEmptyLabelStyle\", \"listEmptyLabelStyle\", \"selectedItemStyle\", \"listEmptyText\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, memo, useMemo } from 'react';\nimport { isEmpty, find } from 'lodash';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Colors from \"./src/constants/Colors\";\nimport Icon from \"./src/components/Icon\";\nimport Toggle from \"./src/components/Toggle\";\nvar hitSlop = {\n  top: 14,\n  bottom: 14,\n  left: 14,\n  right: 14\n};\nvar kOptionsHeight = {\n  width: '100%',\n  maxHeight: 180\n};\nvar kOptionListViewStyle = {\n  width: '100%',\n  alignItems: 'center',\n  paddingVertical: 4\n};\nvar renderItemStyle = {\n  flexShrink: 1\n};\n\nfunction SelectBox(_ref) {\n  var labelStyle = _ref.labelStyle,\n      containerStyle = _ref.containerStyle,\n      inputFilterContainerStyle = _ref.inputFilterContainerStyle,\n      inputFilterStyle = _ref.inputFilterStyle,\n      optionsLabelStyle = _ref.optionsLabelStyle,\n      optionContainerStyle = _ref.optionContainerStyle,\n      multiOptionContainerStyle = _ref.multiOptionContainerStyle,\n      multiOptionsLabelStyle = _ref.multiOptionsLabelStyle,\n      multiListEmptyLabelStyle = _ref.multiListEmptyLabelStyle,\n      listEmptyLabelStyle = _ref.listEmptyLabelStyle,\n      selectedItemStyle = _ref.selectedItemStyle,\n      _ref$listEmptyText = _ref.listEmptyText,\n      listEmptyText = _ref$listEmptyText === void 0 ? 'No results found' : _ref$listEmptyText,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showOptions = _useState4[0],\n      setShowOptions = _useState4[1];\n\n  function renderLabel(item) {\n    var kOptionsLabelStyle = _objectSpread({\n      fontSize: 17,\n      color: 'rgba(60, 60, 67, 0.6)'\n    }, optionsLabelStyle);\n\n    return React.createElement(Text, {\n      style: kOptionsLabelStyle\n    }, item);\n  }\n\n  function renderItem(_ref2) {\n    var item = _ref2.item;\n    var isMulti = props.isMulti,\n        onChange = props.onChange,\n        onMultiSelect = props.onMultiSelect,\n        selectedValues = props.selectedValues;\n\n    var kOptionContainerStyle = _objectSpread({\n      borderColor: '#dadada',\n      borderBottomWidth: 1,\n      width: '100%',\n      flexDirection: 'row',\n      alignItems: 'center',\n      background: '#fff',\n      paddingVertical: 12,\n      paddingRight: 10,\n      justifyContent: 'space-between'\n    }, optionContainerStyle);\n\n    return React.createElement(View, {\n      style: kOptionContainerStyle\n    }, isMulti ? React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n      hitSlop: hitSlop,\n      style: renderItemStyle,\n      onPress: onPressMultiItem()\n    }, renderLabel(item.item)), React.createElement(Toggle, {\n      iconColor: toggleIconColor,\n      checked: selectedValues.some(function (i) {\n        return item.id === i.id;\n      }),\n      onTouch: onPressMultiItem()\n    })) : React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, {\n      hitSlop: hitSlop,\n      style: renderItemStyle,\n      onPress: onPressItem()\n    }, renderLabel(item.item), React.createElement(View, null))));\n\n    function onPressMultiItem() {\n      return function (e) {\n        return onMultiSelect ? onMultiSelect(item) : null;\n      };\n    }\n\n    function onPressItem() {\n      return function (e) {\n        setShowOptions(false);\n        return onChange ? onChange(item) : null;\n      };\n    }\n  }\n\n  function renderGroupItem(_ref3) {\n    var item = _ref3.item;\n    var onTapClose = props.onTapClose,\n        options = props.options;\n    var label = find(options, function (o) {\n      return o.id === item.id;\n    });\n\n    var kMultiOptionContainerStyle = _objectSpread({\n      flexDirection: 'row',\n      borderRadius: 20,\n      paddingVertical: 5,\n      paddingRight: 5,\n      paddingLeft: 10,\n      marginRight: 4,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: Colors.primary,\n      flexGrow: 1\n    }, multiOptionContainerStyle);\n\n    var kMultiOptionsLabelStyle = _objectSpread({\n      fontSize: 10,\n      color: '#fff'\n    }, multiOptionsLabelStyle);\n\n    return React.createElement(View, {\n      style: kMultiOptionContainerStyle\n    }, React.createElement(Text, {\n      style: kMultiOptionsLabelStyle\n    }, label.item), React.createElement(TouchableOpacity, {\n      style: {\n        marginLeft: 15\n      },\n      hitSlop: hitSlop,\n      onPress: onPressItem()\n    }, React.createElement(Icon, {\n      name: \"closeCircle\",\n      fill: \"#fff\",\n      width: 21,\n      height: 21\n    })));\n\n    function onPressItem() {\n      return function (e) {\n        return onTapClose ? onTapClose(item) : null;\n      };\n    }\n  }\n\n  var selectIcon = props.selectIcon,\n      label = props.label,\n      _props$inputPlacehold = props.inputPlaceholder,\n      inputPlaceholder = _props$inputPlacehold === void 0 ? 'Select' : _props$inputPlacehold,\n      hideInputFilter = props.hideInputFilter,\n      _props$width = props.width,\n      width = _props$width === void 0 ? '100%' : _props$width,\n      isMulti = props.isMulti,\n      options = props.options,\n      value = props.value,\n      selectedValues = props.selectedValues,\n      _props$arrowIconColor = props.arrowIconColor,\n      arrowIconColor = _props$arrowIconColor === void 0 ? Colors.primary : _props$arrowIconColor,\n      _props$searchIconColo = props.searchIconColor,\n      searchIconColor = _props$searchIconColo === void 0 ? Colors.primary : _props$searchIconColo,\n      _props$toggleIconColo = props.toggleIconColor,\n      toggleIconColor = _props$toggleIconColo === void 0 ? Colors.primary : _props$toggleIconColo,\n      searchInputProps = props.searchInputProps,\n      multiSelectInputFieldProps = props.multiSelectInputFieldProps,\n      _props$listOptionProp = props.listOptionProps,\n      listOptionProps = _props$listOptionProp === void 0 ? {} : _props$listOptionProp;\n  var filteredSuggestions = useMemo(function () {\n    return options.filter(function (suggestion) {\n      return suggestion.item.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;\n    });\n  }, [inputValue, options]);\n\n  function multiListEmptyComponent() {\n    var kMultiListEmptyLabelStyle = _objectSpread({\n      fontSize: 17,\n      color: 'rgba(60, 60, 67, 0.3)'\n    }, multiListEmptyLabelStyle);\n\n    return React.createElement(TouchableOpacity, {\n      width: \"100%\",\n      style: {\n        flexGrow: 1,\n        width: '100%'\n      },\n      hitSlop: hitSlop,\n      onPress: onPressShowOptions()\n    }, React.createElement(Text, {\n      style: kMultiListEmptyLabelStyle\n    }, inputPlaceholder));\n  }\n\n  function optionListEmpty() {\n    var kListEmptyLabelStyle = _objectSpread({\n      fontSize: 17,\n      color: 'rgba(60, 60, 67, 0.6)'\n    }, listEmptyLabelStyle);\n\n    return React.createElement(View, {\n      style: kOptionListViewStyle\n    }, React.createElement(Text, {\n      style: kListEmptyLabelStyle\n    }, listEmptyText));\n  }\n\n  var kLabelStyle = _objectSpread({\n    fontSize: 12,\n    color: 'rgba(60, 60, 67, 0.6)',\n    paddingBottom: 4\n  }, labelStyle);\n\n  var kContainerStyle = _objectSpread({\n    flexDirection: 'row',\n    width: '100%',\n    borderColor: '#ddd',\n    borderBottomWidth: 1,\n    paddingTop: 6,\n    paddingRight: 20,\n    paddingBottom: 8\n  }, containerStyle);\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: {\n      width: width\n    }\n  }, React.createElement(Text, {\n    style: kLabelStyle\n  }, label), React.createElement(View, {\n    style: kContainerStyle\n  }, React.createElement(View, {\n    style: {\n      paddingRight: 20,\n      flexGrow: 1\n    }\n  }, isMulti ? React.createElement(FlatList, _extends({\n    data: selectedValues,\n    extraData: {\n      inputValue: inputValue,\n      showOptions: showOptions\n    },\n    keyExtractor: keyExtractor(),\n    renderItem: renderGroupItem,\n    horizontal: true,\n    ListEmptyComponent: multiListEmptyComponent\n  }, multiSelectInputFieldProps)) : React.createElement(TouchableOpacity, {\n    hitSlop: hitSlop,\n    onPress: onPressShowOptions()\n  }, React.createElement(Text, {\n    style: kSelectedItemStyle()\n  }, value.item || inputPlaceholder || label))), React.createElement(TouchableOpacity, {\n    onPress: onPressShowOptions(),\n    hitSlop: hitSlop\n  }, selectIcon ? selectIcon : React.createElement(Icon, {\n    name: showOptions ? 'upArrow' : 'downArrow',\n    fill: arrowIconColor\n  }))), showOptions && React.createElement(FlatList, _extends({\n    data: filteredSuggestions || options,\n    extraData: options,\n    keyExtractor: keyExtractor(),\n    renderItem: renderItem,\n    numColumns: 1,\n    horizontal: false,\n    initialNumToRender: 5,\n    maxToRenderPerBatch: 20,\n    windowSize: 10,\n    ListEmptyComponent: optionListEmpty,\n    style: [kOptionsHeight, listOptionProps.style],\n    ListHeaderComponent: HeaderComponent()\n  }, listOptionProps))));\n\n  function keyExtractor() {\n    return function (o) {\n      return o.id + \"-\" + Math.random();\n    };\n  }\n\n  function kSelectedItemStyle() {\n    return _objectSpread({\n      fontSize: 17,\n      color: isEmpty(value.item) ? 'rgba(60, 60, 67, 0.3)' : '#000'\n    }, selectedItemStyle);\n  }\n\n  function HeaderComponent() {\n    var kInputFilterContainerStyle = _objectSpread({\n      width: '100%',\n      borderBottomWidth: 1,\n      borderBottomColor: '#ddd',\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingRight: 18,\n      justifyContent: 'space-between'\n    }, inputFilterContainerStyle);\n\n    var kInputFilterStyle = _objectSpread({\n      paddingVertical: 14,\n      paddingRight: 8,\n      color: '#000',\n      fontSize: 12,\n      flexGrow: 1\n    }, inputFilterStyle);\n\n    return React.createElement(React.Fragment, null, !hideInputFilter && React.createElement(View, {\n      style: kInputFilterContainerStyle\n    }, React.createElement(TextInput, _extends({\n      value: inputValue,\n      placeholder: inputPlaceholder,\n      onChangeText: onChangeText(),\n      style: kInputFilterStyle,\n      placeholderTextColor: \"#000\"\n    }, searchInputProps)), React.createElement(Icon, {\n      name: \"searchBoxIcon\",\n      fill: searchIconColor\n    })), React.createElement(ScrollView, {\n      keyboardShouldPersistTaps: \"always\"\n    }));\n\n    function onChangeText() {\n      return function (value) {\n        return setInputValue(value);\n      };\n    }\n  }\n\n  function onPressShowOptions() {\n    return function () {\n      return setShowOptions(!showOptions);\n    };\n  }\n}\n\nSelectBox.defaultProps = {\n  label: 'Label',\n  options: [{\n    item: 'Aston Villa FC',\n    id: 'AVL'\n  }, {\n    item: 'West Ham United FC',\n    id: 'WHU'\n  }, {\n    item: 'Stoke City FC',\n    id: 'STK'\n  }, {\n    item: 'Sunderland AFC',\n    id: 'SUN'\n  }, {\n    item: 'Everton FC',\n    id: 'EVE'\n  }, {\n    item: 'Tottenham Hotspur FC',\n    id: 'TOT'\n  }, {\n    item: 'Manchester City FC',\n    id: 'MCI'\n  }, {\n    item: 'Chelsea FC',\n    id: 'CHE'\n  }, {\n    item: 'West Bromwich Albion FC',\n    id: 'WBA'\n  }, {\n    item: 'Liverpool FC',\n    id: 'LIV'\n  }, {\n    item: 'Arsenal FC',\n    id: 'ARS'\n  }, {\n    item: 'Manchester United FC',\n    id: 'MUN'\n  }, {\n    item: 'Newcastle United FC',\n    id: 'NEW'\n  }, {\n    item: 'Norwich City FC',\n    id: 'NOR'\n  }, {\n    item: 'Watford FC',\n    id: 'WAT'\n  }, {\n    item: 'Swansea City FC',\n    id: 'SWA'\n  }, {\n    item: 'Crystal Palace FC',\n    id: 'CRY'\n  }, {\n    item: 'Leicester City FC',\n    id: 'LEI'\n  }, {\n    item: 'Southampton FC',\n    id: 'SOU'\n  }, {\n    item: 'AFC Bournemouth',\n    id: 'BOU'\n  }]\n};\nexport default memo(SelectBox);","map":{"version":3,"sources":["C:/Users/cat_w/OneDrive - Queen's University/Fourth Year/HackHer2021/node_modules/react-native-multi-selectbox/index.js"],"names":["React","useState","memo","useMemo","isEmpty","find","Colors","Icon","Toggle","hitSlop","top","bottom","left","right","kOptionsHeight","width","maxHeight","kOptionListViewStyle","alignItems","paddingVertical","renderItemStyle","flexShrink","SelectBox","labelStyle","containerStyle","inputFilterContainerStyle","inputFilterStyle","optionsLabelStyle","optionContainerStyle","multiOptionContainerStyle","multiOptionsLabelStyle","multiListEmptyLabelStyle","listEmptyLabelStyle","selectedItemStyle","listEmptyText","props","inputValue","setInputValue","showOptions","setShowOptions","renderLabel","item","kOptionsLabelStyle","fontSize","color","renderItem","isMulti","onChange","onMultiSelect","selectedValues","kOptionContainerStyle","borderColor","borderBottomWidth","flexDirection","background","paddingRight","justifyContent","onPressMultiItem","toggleIconColor","some","i","id","onPressItem","e","renderGroupItem","onTapClose","options","label","o","kMultiOptionContainerStyle","borderRadius","paddingLeft","marginRight","backgroundColor","primary","flexGrow","kMultiOptionsLabelStyle","marginLeft","selectIcon","inputPlaceholder","hideInputFilter","value","arrowIconColor","searchIconColor","searchInputProps","multiSelectInputFieldProps","listOptionProps","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","multiListEmptyComponent","kMultiListEmptyLabelStyle","onPressShowOptions","optionListEmpty","kListEmptyLabelStyle","kLabelStyle","paddingBottom","kContainerStyle","paddingTop","keyExtractor","kSelectedItemStyle","style","HeaderComponent","Math","random","kInputFilterContainerStyle","borderBottomColor","kInputFilterStyle","onChangeText","defaultProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,EAAgCC,OAAhC,QAA+C,OAA/C;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,QAA9B;;;;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,OAAO,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,MAAM,EAAE,EAAnB;AAAuBC,EAAAA,IAAI,EAAE,EAA7B;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CAAhB;AAEA,IAAMC,cAAc,GAAG;AAAEC,EAAAA,KAAK,EAAE,MAAT;AAAiBC,EAAAA,SAAS,EAAE;AAA5B,CAAvB;AAEA,IAAMC,oBAAoB,GAAG;AAC3BF,EAAAA,KAAK,EAAE,MADoB;AAE3BG,EAAAA,UAAU,EAAE,QAFe;AAG3BC,EAAAA,eAAe,EAAE;AAHU,CAA7B;AAKA,IAAMC,eAAe,GAAG;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAxB;;AACA,SAASC,SAAT,OAcG;AAAA,MAbDC,UAaC,QAbDA,UAaC;AAAA,MAZDC,cAYC,QAZDA,cAYC;AAAA,MAXDC,yBAWC,QAXDA,yBAWC;AAAA,MAVDC,gBAUC,QAVDA,gBAUC;AAAA,MATDC,iBASC,QATDA,iBASC;AAAA,MARDC,oBAQC,QARDA,oBAQC;AAAA,MAPDC,yBAOC,QAPDA,yBAOC;AAAA,MANDC,sBAMC,QANDA,sBAMC;AAAA,MALDC,wBAKC,QALDA,wBAKC;AAAA,MAJDC,mBAIC,QAJDA,mBAIC;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;AAAA,gCAFDC,aAEC;AAAA,MAFDA,aAEC,mCAFe,kBAEf;AAAA,MADEC,KACF;;AACD,kBAAoClC,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOmC,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,mBAAsCpC,QAAQ,CAAC,KAAD,CAA9C;AAAA;AAAA,MAAOqC,WAAP;AAAA,MAAoBC,cAApB;;AAEA,WAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,QAAMC,kBAAkB;AACtBC,MAAAA,QAAQ,EAAE,EADY;AAEtBC,MAAAA,KAAK,EAAE;AAFe,OAGnBjB,iBAHmB,CAAxB;;AAKA,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEe;AAAb,OAAkCD,IAAlC,CAAP;AACD;;AAED,WAASI,UAAT,QAA8B;AAAA,QAARJ,IAAQ,SAARA,IAAQ;AAC5B,QAAQK,OAAR,GAA6DX,KAA7D,CAAQW,OAAR;AAAA,QAAiBC,QAAjB,GAA6DZ,KAA7D,CAAiBY,QAAjB;AAAA,QAA2BC,aAA3B,GAA6Db,KAA7D,CAA2Ba,aAA3B;AAAA,QAA0CC,cAA1C,GAA6Dd,KAA7D,CAA0Cc,cAA1C;;AACA,QAAMC,qBAAqB;AACzBC,MAAAA,WAAW,EAAE,SADY;AAEzBC,MAAAA,iBAAiB,EAAE,CAFM;AAGzBrC,MAAAA,KAAK,EAAE,MAHkB;AAIzBsC,MAAAA,aAAa,EAAE,KAJU;AAKzBnC,MAAAA,UAAU,EAAE,QALa;AAMzBoC,MAAAA,UAAU,EAAE,MANa;AAOzBnC,MAAAA,eAAe,EAAE,EAPQ;AAQzBoC,MAAAA,YAAY,EAAE,EARW;AASzBC,MAAAA,cAAc,EAAE;AATS,OAUtB5B,oBAVsB,CAA3B;;AAYA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEsB;AAAb,OACGJ,OAAO,GACN,0CACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAErC,OAA3B;AAAoC,MAAA,KAAK,EAAEW,eAA3C;AAA4D,MAAA,OAAO,EAAEqC,gBAAgB;AAArF,OACGjB,WAAW,CAACC,IAAI,CAACA,IAAN,CADd,CADF,EAIE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAEiB,eADb;AAEE,MAAA,OAAO,EAAET,cAAc,CAACU,IAAf,CAAoB,UAAAC,CAAC;AAAA,eAAInB,IAAI,CAACoB,EAAL,KAAYD,CAAC,CAACC,EAAlB;AAAA,OAArB,CAFX;AAGE,MAAA,OAAO,EAAEJ,gBAAgB;AAH3B,MAJF,CADM,GAYN,0CACE,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEhD,OAA3B;AAAoC,MAAA,KAAK,EAAEW,eAA3C;AAA4D,MAAA,OAAO,EAAE0C,WAAW;AAAhF,OACGtB,WAAW,CAACC,IAAI,CAACA,IAAN,CADd,EAEE,oBAAC,IAAD,OAFF,CADF,CAbJ,CADF;;AAwBA,aAASgB,gBAAT,GAA4B;AAC1B,aAAO,UAACM,CAAD;AAAA,eAAQf,aAAa,GAAGA,aAAa,CAACP,IAAD,CAAhB,GAAyB,IAA9C;AAAA,OAAP;AACD;;AAED,aAASqB,WAAT,GAAuB;AACrB,aAAO,UAACC,CAAD,EAAO;AACZxB,QAAAA,cAAc,CAAC,KAAD,CAAd;AACA,eAAOQ,QAAQ,GAAGA,QAAQ,CAACN,IAAD,CAAX,GAAoB,IAAnC;AACD,OAHD;AAID;AACF;;AAED,WAASuB,eAAT,QAAmC;AAAA,QAARvB,IAAQ,SAARA,IAAQ;AACjC,QAAQwB,UAAR,GAAgC9B,KAAhC,CAAQ8B,UAAR;AAAA,QAAoBC,OAApB,GAAgC/B,KAAhC,CAAoB+B,OAApB;AACA,QAAMC,KAAK,GAAG9D,IAAI,CAAC6D,OAAD,EAAU,UAACE,CAAD;AAAA,aAAOA,CAAC,CAACP,EAAF,KAASpB,IAAI,CAACoB,EAArB;AAAA,KAAV,CAAlB;;AACA,QAAMQ,0BAA0B;AAC9BhB,MAAAA,aAAa,EAAE,KADe;AAE9BiB,MAAAA,YAAY,EAAE,EAFgB;AAG9BnD,MAAAA,eAAe,EAAE,CAHa;AAI9BoC,MAAAA,YAAY,EAAE,CAJgB;AAK9BgB,MAAAA,WAAW,EAAE,EALiB;AAM9BC,MAAAA,WAAW,EAAE,CANiB;AAO9BtD,MAAAA,UAAU,EAAE,QAPkB;AAQ9BsC,MAAAA,cAAc,EAAE,QARc;AAS9BiB,MAAAA,eAAe,EAAEnE,MAAM,CAACoE,OATM;AAU9BC,MAAAA,QAAQ,EAAE;AAVoB,OAW3B9C,yBAX2B,CAAhC;;AAaA,QAAM+C,uBAAuB;AAC3BjC,MAAAA,QAAQ,EAAE,EADiB;AAE3BC,MAAAA,KAAK,EAAE;AAFoB,OAGxBd,sBAHwB,CAA7B;;AAKA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEuC;AAAb,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEO;AAAb,OAAuCT,KAAK,CAAC1B,IAA7C,CADF,EAEE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE;AAAEoC,QAAAA,UAAU,EAAE;AAAd,OAAzB;AAA6C,MAAA,OAAO,EAAEpE,OAAtD;AAA+D,MAAA,OAAO,EAAEqD,WAAW;AAAnF,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,IAAI,EAAC,MAA9B;AAAqC,MAAA,KAAK,EAAE,EAA5C;AAAgD,MAAA,MAAM,EAAE;AAAxD,MADF,CAFF,CADF;;AASA,aAASA,WAAT,GAAuB;AACrB,aAAO,UAACC,CAAD;AAAA,eAAQE,UAAU,GAAGA,UAAU,CAACxB,IAAD,CAAb,GAAsB,IAAxC;AAAA,OAAP;AACD;AACF;;AACD,MACEqC,UADF,GAgBI3C,KAhBJ,CACE2C,UADF;AAAA,MAEEX,KAFF,GAgBIhC,KAhBJ,CAEEgC,KAFF;AAAA,8BAgBIhC,KAhBJ,CAGE4C,gBAHF;AAAA,MAGEA,gBAHF,sCAGqB,QAHrB;AAAA,MAIEC,eAJF,GAgBI7C,KAhBJ,CAIE6C,eAJF;AAAA,qBAgBI7C,KAhBJ,CAKEpB,KALF;AAAA,MAKEA,KALF,6BAKU,MALV;AAAA,MAME+B,OANF,GAgBIX,KAhBJ,CAMEW,OANF;AAAA,MAOEoB,OAPF,GAgBI/B,KAhBJ,CAOE+B,OAPF;AAAA,MAQEe,KARF,GAgBI9C,KAhBJ,CAQE8C,KARF;AAAA,MASEhC,cATF,GAgBId,KAhBJ,CASEc,cATF;AAAA,8BAgBId,KAhBJ,CAUE+C,cAVF;AAAA,MAUEA,cAVF,sCAUmB5E,MAAM,CAACoE,OAV1B;AAAA,8BAgBIvC,KAhBJ,CAWEgD,eAXF;AAAA,MAWEA,eAXF,sCAWoB7E,MAAM,CAACoE,OAX3B;AAAA,8BAgBIvC,KAhBJ,CAYEuB,eAZF;AAAA,MAYEA,eAZF,sCAYoBpD,MAAM,CAACoE,OAZ3B;AAAA,MAaEU,gBAbF,GAgBIjD,KAhBJ,CAaEiD,gBAbF;AAAA,MAcEC,0BAdF,GAgBIlD,KAhBJ,CAcEkD,0BAdF;AAAA,8BAgBIlD,KAhBJ,CAeEmD,eAfF;AAAA,MAeEA,eAfF,sCAeoB,EAfpB;AAiBA,MAAMC,mBAAmB,GAAGpF,OAAO,CACjC;AAAA,WAAM+D,OAAO,CAACsB,MAAR,CAAe,UAACC,UAAD;AAAA,aAAgBA,UAAU,CAAChD,IAAX,CAAgBiD,WAAhB,GAA8BC,OAA9B,CAAsCvD,UAAU,CAACsD,WAAX,EAAtC,IAAkE,CAAC,CAAnF;AAAA,KAAf,CAAN;AAAA,GADiC,EAEjC,CAACtD,UAAD,EAAa8B,OAAb,CAFiC,CAAnC;;AAKA,WAAS0B,uBAAT,GAAmC;AACjC,QAAMC,yBAAyB;AAC7BlD,MAAAA,QAAQ,EAAE,EADmB;AAE7BC,MAAAA,KAAK,EAAE;AAFsB,OAG1Bb,wBAH0B,CAA/B;;AAKA,WACE,oBAAC,gBAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,EAAE;AAAE4C,QAAAA,QAAQ,EAAE,CAAZ;AAAe5D,QAAAA,KAAK,EAAE;AAAtB,OAFT;AAGE,MAAA,OAAO,EAAEN,OAHX;AAIE,MAAA,OAAO,EAAEqF,kBAAkB;AAJ7B,OAKE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED;AAAb,OAAyCd,gBAAzC,CALF,CADF;AASD;;AAED,WAASgB,eAAT,GAA2B;AACzB,QAAMC,oBAAoB;AACxBrD,MAAAA,QAAQ,EAAE,EADc;AAExBC,MAAAA,KAAK,EAAE;AAFiB,OAGrBZ,mBAHqB,CAA1B;;AAKA,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEf;AAAb,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE+E;AAAb,OAAoC9D,aAApC,CADF,CADF;AAKD;;AACD,MAAM+D,WAAW;AACftD,IAAAA,QAAQ,EAAE,EADK;AAEfC,IAAAA,KAAK,EAAE,uBAFQ;AAGfsD,IAAAA,aAAa,EAAE;AAHA,KAIZ3E,UAJY,CAAjB;;AAOA,MAAM4E,eAAe;AACnB9C,IAAAA,aAAa,EAAE,KADI;AAEnBtC,IAAAA,KAAK,EAAE,MAFY;AAGnBoC,IAAAA,WAAW,EAAE,MAHM;AAInBC,IAAAA,iBAAiB,EAAE,CAJA;AAKnBgD,IAAAA,UAAU,EAAE,CALO;AAMnB7C,IAAAA,YAAY,EAAE,EANK;AAOnB2C,IAAAA,aAAa,EAAE;AAPI,KAQhB1E,cARgB,CAArB;;AAWA,SACE,0CACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLT,MAAAA,KAAK,EAALA;AADK;AADT,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkF;AAAb,KAA2B9B,KAA3B,CAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEgC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5C,MAAAA,YAAY,EAAE,EAAhB;AAAoBoB,MAAAA,QAAQ,EAAE;AAA9B;AAAb,KACG7B,OAAO,GACN,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEG,cADR;AAEE,IAAA,SAAS,EAAE;AAAEb,MAAAA,UAAU,EAAVA,UAAF;AAAcE,MAAAA,WAAW,EAAXA;AAAd,KAFb;AAGE,IAAA,YAAY,EAAE+D,YAAY,EAH5B;AAIE,IAAA,UAAU,EAAErC,eAJd;AAKE,IAAA,UAAU,EAAE,IALd;AAME,IAAA,kBAAkB,EAAE4B;AANtB,KAOMP,0BAPN,EADM,GAWN,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE5E,OAA3B;AAAoC,IAAA,OAAO,EAAEqF,kBAAkB;AAA/D,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,kBAAkB;AAA/B,KAAoCrB,KAAK,CAACxC,IAAN,IAAcsC,gBAAd,IAAkCZ,KAAtE,CADF,CAZJ,CADF,EAkBE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE2B,kBAAkB,EAA7C;AAAiD,IAAA,OAAO,EAAErF;AAA1D,KACGqE,UAAU,GAAGA,UAAH,GAAgB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAExC,WAAW,GAAG,SAAH,GAAe,WAAtC;AAAmD,IAAA,IAAI,EAAE4C;AAAzD,IAD7B,CAlBF,CALF,EA4BG5C,WAAW,IACV,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEiD,mBAAmB,IAAIrB,OAD/B;AAEE,IAAA,SAAS,EAAEA,OAFb;AAGE,IAAA,YAAY,EAAEmC,YAAY,EAH5B;AAIE,IAAA,UAAU,EAAExD,UAJd;AAKE,IAAA,UAAU,EAAE,CALd;AAME,IAAA,UAAU,EAAE,KANd;AAOE,IAAA,kBAAkB,EAAE,CAPtB;AAQE,IAAA,mBAAmB,EAAE,EARvB;AASE,IAAA,UAAU,EAAE,EATd;AAUE,IAAA,kBAAkB,EAAEkD,eAVtB;AAWE,IAAA,KAAK,EAAE,CAACjF,cAAD,EAAiBwE,eAAe,CAACiB,KAAjC,CAXT;AAYE,IAAA,mBAAmB,EAAEC,eAAe;AAZtC,KAaMlB,eAbN,EA7BJ,CADF,CADF;;AAmDA,WAASe,YAAT,GAAwB;AACtB,WAAO,UAACjC,CAAD;AAAA,aAAUA,CAAC,CAACP,EAAZ,SAAkB4C,IAAI,CAACC,MAAL,EAAlB;AAAA,KAAP;AACD;;AAED,WAASJ,kBAAT,GAA8B;AAC5B;AACE3D,MAAAA,QAAQ,EAAE,EADZ;AAEEC,MAAAA,KAAK,EAAExC,OAAO,CAAC6E,KAAK,CAACxC,IAAP,CAAP,GAAsB,uBAAtB,GAAgD;AAFzD,OAGKR,iBAHL;AAKD;;AAED,WAASuE,eAAT,GAA2B;AACzB,QAAMG,0BAA0B;AAC9B5F,MAAAA,KAAK,EAAE,MADuB;AAE9BqC,MAAAA,iBAAiB,EAAE,CAFW;AAG9BwD,MAAAA,iBAAiB,EAAE,MAHW;AAI9BvD,MAAAA,aAAa,EAAE,KAJe;AAK9BnC,MAAAA,UAAU,EAAE,QALkB;AAM9BqC,MAAAA,YAAY,EAAE,EANgB;AAO9BC,MAAAA,cAAc,EAAE;AAPc,OAQ3B/B,yBAR2B,CAAhC;;AAUA,QAAMoF,iBAAiB;AACrB1F,MAAAA,eAAe,EAAE,EADI;AAErBoC,MAAAA,YAAY,EAAE,CAFO;AAGrBX,MAAAA,KAAK,EAAE,MAHc;AAIrBD,MAAAA,QAAQ,EAAE,EAJW;AAKrBgC,MAAAA,QAAQ,EAAE;AALW,OAMlBjD,gBANkB,CAAvB;;AAQA,WACE,0CACG,CAACsD,eAAD,IACC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE2B;AAAb,OACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEvE,UADT;AAEE,MAAA,WAAW,EAAE2C,gBAFf;AAGE,MAAA,YAAY,EAAE+B,YAAY,EAH5B;AAIE,MAAA,KAAK,EAAED,iBAJT;AAKE,MAAA,oBAAoB,EAAC;AALvB,OAMMzB,gBANN,EADF,EASE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,eAAX;AAA2B,MAAA,IAAI,EAAED;AAAjC,MATF,CAFJ,EAcE,oBAAC,UAAD;AAAY,MAAA,yBAAyB,EAAC;AAAtC,MAdF,CADF;;AAmBA,aAAS2B,YAAT,GAAwB;AACtB,aAAO,UAAC7B,KAAD;AAAA,eAAW5C,aAAa,CAAC4C,KAAD,CAAxB;AAAA,OAAP;AACD;AACF;;AAED,WAASa,kBAAT,GAA8B;AAC5B,WAAO;AAAA,aAAMvD,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAAP;AACD;AACF;;AAEDhB,SAAS,CAACyF,YAAV,GAAyB;AACvB5C,EAAAA,KAAK,EAAE,OADgB;AAEvBD,EAAAA,OAAO,EAAE,CACP;AACEzB,IAAAA,IAAI,EAAE,gBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GADO,EAKP;AACEpB,IAAAA,IAAI,EAAE,oBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GALO,EASP;AACEpB,IAAAA,IAAI,EAAE,eADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GATO,EAaP;AACEpB,IAAAA,IAAI,EAAE,gBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAbO,EAiBP;AACEpB,IAAAA,IAAI,EAAE,YADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAjBO,EAqBP;AACEpB,IAAAA,IAAI,EAAE,sBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GArBO,EAyBP;AACEpB,IAAAA,IAAI,EAAE,oBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAzBO,EA6BP;AACEpB,IAAAA,IAAI,EAAE,YADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GA7BO,EAiCP;AACEpB,IAAAA,IAAI,EAAE,yBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAjCO,EAqCP;AACEpB,IAAAA,IAAI,EAAE,cADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GArCO,EAyCP;AACEpB,IAAAA,IAAI,EAAE,YADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAzCO,EA6CP;AACEpB,IAAAA,IAAI,EAAE,sBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GA7CO,EAiDP;AACEpB,IAAAA,IAAI,EAAE,qBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAjDO,EAqDP;AACEpB,IAAAA,IAAI,EAAE,iBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GArDO,EAyDP;AACEpB,IAAAA,IAAI,EAAE,YADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAzDO,EA6DP;AACEpB,IAAAA,IAAI,EAAE,iBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GA7DO,EAiEP;AACEpB,IAAAA,IAAI,EAAE,mBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAjEO,EAqEP;AACEpB,IAAAA,IAAI,EAAE,mBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GArEO,EAyEP;AACEpB,IAAAA,IAAI,EAAE,gBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GAzEO,EA6EP;AACEpB,IAAAA,IAAI,EAAE,iBADR;AAEEoB,IAAAA,EAAE,EAAE;AAFN,GA7EO;AAFc,CAAzB;AAsFA,eAAe3D,IAAI,CAACoB,SAAD,CAAnB","sourcesContent":["import React, { useState, memo, useMemo } from 'react'\r\nimport { isEmpty, find } from 'lodash'\r\nimport { View, FlatList, Text, TouchableOpacity, TextInput, ScrollView } from 'react-native'\r\nimport Colors from './src/constants/Colors'\r\nimport Icon from './src/components/Icon'\r\nimport Toggle from './src/components/Toggle'\r\n\r\nconst hitSlop = { top: 14, bottom: 14, left: 14, right: 14 }\r\n\r\nconst kOptionsHeight = { width: '100%', maxHeight: 180 }\r\n\r\nconst kOptionListViewStyle = {\r\n  width: '100%',\r\n  alignItems: 'center',\r\n  paddingVertical: 4,\r\n}\r\nconst renderItemStyle = { flexShrink: 1 }\r\nfunction SelectBox({\r\n  labelStyle,\r\n  containerStyle,\r\n  inputFilterContainerStyle,\r\n  inputFilterStyle,\r\n  optionsLabelStyle,\r\n  optionContainerStyle,\r\n  multiOptionContainerStyle,\r\n  multiOptionsLabelStyle,\r\n  multiListEmptyLabelStyle,\r\n  listEmptyLabelStyle,\r\n  selectedItemStyle,\r\n  listEmptyText = 'No results found',\r\n  ...props\r\n}) {\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  const [showOptions, setShowOptions] = useState(false)\r\n\r\n  function renderLabel(item) {\r\n    const kOptionsLabelStyle = {\r\n      fontSize: 17,\r\n      color: 'rgba(60, 60, 67, 0.6)',\r\n      ...optionsLabelStyle,\r\n    }\r\n    return <Text style={kOptionsLabelStyle}>{item}</Text>\r\n  }\r\n\r\n  function renderItem({ item }) {\r\n    const { isMulti, onChange, onMultiSelect, selectedValues } = props\r\n    const kOptionContainerStyle = {\r\n      borderColor: '#dadada',\r\n      borderBottomWidth: 1,\r\n      width: '100%',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      background: '#fff',\r\n      paddingVertical: 12,\r\n      paddingRight: 10,\r\n      justifyContent: 'space-between',\r\n      ...optionContainerStyle,\r\n    }\r\n    return (\r\n      <View style={kOptionContainerStyle}>\r\n        {isMulti ? (\r\n          <>\r\n            <TouchableOpacity hitSlop={hitSlop} style={renderItemStyle} onPress={onPressMultiItem()}>\r\n              {renderLabel(item.item)}\r\n            </TouchableOpacity>\r\n            <Toggle\r\n              iconColor={toggleIconColor}\r\n              checked={selectedValues.some(i => item.id === i.id)}\r\n              onTouch={onPressMultiItem()}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <TouchableOpacity hitSlop={hitSlop} style={renderItemStyle} onPress={onPressItem()}>\r\n              {renderLabel(item.item)}\r\n              <View />\r\n            </TouchableOpacity>\r\n          </>\r\n        )}\r\n      </View>\r\n    )\r\n\r\n    function onPressMultiItem() {\r\n      return (e) => (onMultiSelect ? onMultiSelect(item) : null)\r\n    }\r\n\r\n    function onPressItem() {\r\n      return (e) => {\r\n        setShowOptions(false)\r\n        return onChange ? onChange(item) : null\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderGroupItem({ item }) {\r\n    const { onTapClose, options } = props\r\n    const label = find(options, (o) => o.id === item.id)\r\n    const kMultiOptionContainerStyle = {\r\n      flexDirection: 'row',\r\n      borderRadius: 20,\r\n      paddingVertical: 5,\r\n      paddingRight: 5,\r\n      paddingLeft: 10,\r\n      marginRight: 4,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      backgroundColor: Colors.primary,\r\n      flexGrow: 1,\r\n      ...multiOptionContainerStyle,\r\n    }\r\n    const kMultiOptionsLabelStyle = {\r\n      fontSize: 10,\r\n      color: '#fff',\r\n      ...multiOptionsLabelStyle,\r\n    }\r\n    return (\r\n      <View style={kMultiOptionContainerStyle}>\r\n        <Text style={kMultiOptionsLabelStyle}>{label.item}</Text>\r\n        <TouchableOpacity style={{ marginLeft: 15 }} hitSlop={hitSlop} onPress={onPressItem()}>\r\n          <Icon name=\"closeCircle\" fill=\"#fff\" width={21} height={21} />\r\n        </TouchableOpacity>\r\n      </View>\r\n    )\r\n\r\n    function onPressItem() {\r\n      return (e) => (onTapClose ? onTapClose(item) : null)\r\n    }\r\n  }\r\n  const {\r\n    selectIcon,\r\n    label,\r\n    inputPlaceholder = 'Select',\r\n    hideInputFilter,\r\n    width = '100%',\r\n    isMulti,\r\n    options,\r\n    value,\r\n    selectedValues,\r\n    arrowIconColor = Colors.primary,\r\n    searchIconColor = Colors.primary,\r\n    toggleIconColor = Colors.primary,\r\n    searchInputProps,\r\n    multiSelectInputFieldProps,\r\n    listOptionProps = {},\r\n  } = props\r\n  const filteredSuggestions = useMemo(\r\n    () => options.filter((suggestion) => suggestion.item.toLowerCase().indexOf(inputValue.toLowerCase()) > -1),\r\n    [inputValue, options]\r\n  )\r\n\r\n  function multiListEmptyComponent() {\r\n    const kMultiListEmptyLabelStyle = {\r\n      fontSize: 17,\r\n      color: 'rgba(60, 60, 67, 0.3)',\r\n      ...multiListEmptyLabelStyle,\r\n    }\r\n    return (\r\n      <TouchableOpacity\r\n        width=\"100%\"\r\n        style={{ flexGrow: 1, width: '100%' }}\r\n        hitSlop={hitSlop}\r\n        onPress={onPressShowOptions()}>\r\n        <Text style={kMultiListEmptyLabelStyle}>{inputPlaceholder}</Text>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  function optionListEmpty() {\r\n    const kListEmptyLabelStyle = {\r\n      fontSize: 17,\r\n      color: 'rgba(60, 60, 67, 0.6)',\r\n      ...listEmptyLabelStyle,\r\n    }\r\n    return (\r\n      <View style={kOptionListViewStyle}>\r\n        <Text style={kListEmptyLabelStyle}>{listEmptyText}</Text>\r\n      </View>\r\n    )\r\n  }\r\n  const kLabelStyle = {\r\n    fontSize: 12,\r\n    color: 'rgba(60, 60, 67, 0.6)',\r\n    paddingBottom: 4,\r\n    ...labelStyle,\r\n  }\r\n\r\n  const kContainerStyle = {\r\n    flexDirection: 'row',\r\n    width: '100%',\r\n    borderColor: '#ddd',\r\n    borderBottomWidth: 1,\r\n    paddingTop: 6,\r\n    paddingRight: 20,\r\n    paddingBottom: 8,\r\n    ...containerStyle,\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View\r\n        style={{\r\n          width,\r\n        }}>\r\n        <Text style={kLabelStyle}>{label}</Text>\r\n        <View style={kContainerStyle}>\r\n          <View style={{ paddingRight: 20, flexGrow: 1 }}>\r\n            {isMulti ? (\r\n              <FlatList\r\n                data={selectedValues}\r\n                extraData={{ inputValue, showOptions }}\r\n                keyExtractor={keyExtractor()}\r\n                renderItem={renderGroupItem}\r\n                horizontal={true}\r\n                ListEmptyComponent={multiListEmptyComponent}\r\n                {...multiSelectInputFieldProps}\r\n              />\r\n            ) : (\r\n              <TouchableOpacity hitSlop={hitSlop} onPress={onPressShowOptions()}>\r\n                <Text style={kSelectedItemStyle()}>{value.item || inputPlaceholder || label}</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n          </View>\r\n          <TouchableOpacity onPress={onPressShowOptions()} hitSlop={hitSlop}>\r\n            {selectIcon ? selectIcon : <Icon name={showOptions ? 'upArrow' : 'downArrow'} fill={arrowIconColor} />}\r\n          </TouchableOpacity>\r\n        </View>\r\n        {/* Options wrapper */}\r\n        {showOptions && (\r\n          <FlatList\r\n            data={filteredSuggestions || options}\r\n            extraData={options}\r\n            keyExtractor={keyExtractor()}\r\n            renderItem={renderItem}\r\n            numColumns={1}\r\n            horizontal={false}\r\n            initialNumToRender={5}\r\n            maxToRenderPerBatch={20}\r\n            windowSize={10}\r\n            ListEmptyComponent={optionListEmpty}\r\n            style={[kOptionsHeight, listOptionProps.style]}\r\n            ListHeaderComponent={HeaderComponent()}\r\n            {...listOptionProps}\r\n          />\r\n        )}\r\n      </View>\r\n    </>\r\n  )\r\n\r\n  function keyExtractor() {\r\n    return (o) => `${o.id}-${Math.random()}`\r\n  }\r\n\r\n  function kSelectedItemStyle() {\r\n    return {\r\n      fontSize: 17,\r\n      color: isEmpty(value.item) ? 'rgba(60, 60, 67, 0.3)' : '#000',\r\n      ...selectedItemStyle,\r\n    }\r\n  }\r\n\r\n  function HeaderComponent() {\r\n    const kInputFilterContainerStyle = {\r\n      width: '100%',\r\n      borderBottomWidth: 1,\r\n      borderBottomColor: '#ddd',\r\n      flexDirection: 'row',\r\n      alignItems: 'center',\r\n      paddingRight: 18,\r\n      justifyContent: 'space-between',\r\n      ...inputFilterContainerStyle,\r\n    }\r\n    const kInputFilterStyle = {\r\n      paddingVertical: 14,\r\n      paddingRight: 8,\r\n      color: '#000',\r\n      fontSize: 12,\r\n      flexGrow: 1,\r\n      ...inputFilterStyle,\r\n    }\r\n    return (\r\n      <>\r\n        {!hideInputFilter && (\r\n          <View style={kInputFilterContainerStyle}>\r\n            <TextInput\r\n              value={inputValue}\r\n              placeholder={inputPlaceholder}\r\n              onChangeText={onChangeText()}\r\n              style={kInputFilterStyle}\r\n              placeholderTextColor=\"#000\"\r\n              {...searchInputProps}\r\n            />\r\n            <Icon name=\"searchBoxIcon\" fill={searchIconColor} />\r\n          </View>\r\n        )}\r\n        <ScrollView keyboardShouldPersistTaps=\"always\" />\r\n      </>\r\n    )\r\n\r\n    function onChangeText() {\r\n      return (value) => setInputValue(value)\r\n    }\r\n  }\r\n\r\n  function onPressShowOptions() {\r\n    return () => setShowOptions(!showOptions)\r\n  }\r\n}\r\n\r\nSelectBox.defaultProps = {\r\n  label: 'Label',\r\n  options: [\r\n    {\r\n      item: 'Aston Villa FC',\r\n      id: 'AVL',\r\n    },\r\n    {\r\n      item: 'West Ham United FC',\r\n      id: 'WHU',\r\n    },\r\n    {\r\n      item: 'Stoke City FC',\r\n      id: 'STK',\r\n    },\r\n    {\r\n      item: 'Sunderland AFC',\r\n      id: 'SUN',\r\n    },\r\n    {\r\n      item: 'Everton FC',\r\n      id: 'EVE',\r\n    },\r\n    {\r\n      item: 'Tottenham Hotspur FC',\r\n      id: 'TOT',\r\n    },\r\n    {\r\n      item: 'Manchester City FC',\r\n      id: 'MCI',\r\n    },\r\n    {\r\n      item: 'Chelsea FC',\r\n      id: 'CHE',\r\n    },\r\n    {\r\n      item: 'West Bromwich Albion FC',\r\n      id: 'WBA',\r\n    },\r\n    {\r\n      item: 'Liverpool FC',\r\n      id: 'LIV',\r\n    },\r\n    {\r\n      item: 'Arsenal FC',\r\n      id: 'ARS',\r\n    },\r\n    {\r\n      item: 'Manchester United FC',\r\n      id: 'MUN',\r\n    },\r\n    {\r\n      item: 'Newcastle United FC',\r\n      id: 'NEW',\r\n    },\r\n    {\r\n      item: 'Norwich City FC',\r\n      id: 'NOR',\r\n    },\r\n    {\r\n      item: 'Watford FC',\r\n      id: 'WAT',\r\n    },\r\n    {\r\n      item: 'Swansea City FC',\r\n      id: 'SWA',\r\n    },\r\n    {\r\n      item: 'Crystal Palace FC',\r\n      id: 'CRY',\r\n    },\r\n    {\r\n      item: 'Leicester City FC',\r\n      id: 'LEI',\r\n    },\r\n    {\r\n      item: 'Southampton FC',\r\n      id: 'SOU',\r\n    },\r\n    {\r\n      item: 'AFC Bournemouth',\r\n      id: 'BOU',\r\n    },\r\n  ],\r\n}\r\n\r\nexport default memo(SelectBox)\r\n"]},"metadata":{},"sourceType":"module"}